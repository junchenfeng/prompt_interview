请设计一个名为VideoPreview的类，满足以下要求：
1. 创建一个名为VideoPreview的类，用于处理视频预览功能。
2. 类中应包含以下公共方法：
   - `set_image_preview()`：将图片 ID 对应的预览 URL 存储到腾讯云的 COS 桶中。这意味着将该预览 URL 保存到腾讯云对象存储服务中，以便后续使用。
   - `get_image_preview()`：当用户通过图片 ID 请求预览 URL 时，从 COS 存储桶中获取存储的地址。这意味着在后端应用程序中根据用户请求的图片 ID 从 COS 桶中获取对应的预览 URL 地址。将获取到的 COS 存储地址返回给前端应用程序，用于展示图片。前端应用程序会收到一个有效的 COS 存储地址，通过该地址可以获取到图片的预览内容，并在前端展示。
   '''通过这种技术方案，可以避免前端直接使用预览 URL 而受到过期时间的限制，而是通过 COS 存储地址来获取图片预览内容，解决了过期时间对前端调用和展示的影响。'''
3. 在处理异常情况时，应使用try-except语句和logging模块进行错误处理和日志记录。
4. 代码应符合"clean code"的代码风格要求，并可进行代码重构。
5. 在代码中应使用Python 3语法，并添加类型提示以提高代码的可读性和可维护性。
6. 请编写Unittest测试用例（位于test.py文件中），以提高对代码的测试覆盖率。

任务分为以下几个步骤：
1. 从网络接口获取视频的预览URL：
   - 请使用网络接口（例如抖音千川的素材API）来获取视频的预览URL。
   - 在VideoPreview类的`set_image_preview()`方法中实现此步骤。

2. 将视频预览图像url保存到腾讯云存储桶（COS）：
   - 请参考腾讯云存储桶（COS）的文档，了解如何保存图像并设置过期时间。
   - 在VideoPreview类的`set_image_preview()`方法中实现此步骤。

3. 当用户请求预览URL时，返回COS存储地址：
   - 在VideoPreview类的`get_image_preview()`方法中实现此步骤。
   - 检查存储的url是否过期。如果过期，重新尝试存储；如果获取失败，报错。

提示和注意事项：
1. 请引入所需的依赖库（如requests,qcloud_cos等）。
2. 在使用腾讯云存储桶（COS）之前，请先了解和配置正确的访问密钥等相关参数。
3. 可以对需要重构的代码进行重构，以提高可读性和错误处理。
4. 可以使用适当的日志级别（如logging.ERROR）来记录错误信息。
5. 可以使用Python内置的unittest模块编写和运行测试用例。

最终，请输出以下两个文件：code.py和test.py，以便我们能够检查和评估代码。